{"version":3,"sources":["component/barang.js","App.js","serviceWorker.js","index.js"],"names":["Barang","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cart","handleClick","bind","assertThisInitialized","item","e","preventDefault","push","setState","onCart","_this2","react_default","a","createElement","className","map","key","name","height","width","src","img","description","price","href","onClick","Component","localStorage","setItem","JSON","stringify","id","App","initialItems","parse","getItem","items","totalCart","cari","showPopup","checkOut","onSubmit","onChange","getItems","event","inputName","value","updatedList","filter","toLowerCase","search","target","cartItem","i","total","Promise","all","then","completed","pop","_this3","type","placeholder","aria-label","ref","length","barang","App_Popup","text","closePopup","Popup","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ce1f860.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Barang extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cart:[]\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(item,e){\r\n        e.preventDefault();\r\n        const cart = this.state.cart;\r\n        cart.push({item});\r\n        this.setState({ cart });\r\n        this.props.onCart(cart);\r\n    }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"card-deck\">\r\n        {\r\n            this.props.item.map((item)=>{\r\n                return(\r\n                    <div className=\"card mb-4\" key={item.name}>\r\n                        <img className=\"card-img-top p-2\" height=\"200\" width=\"200\" src={item.img}/>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{item.name}</h5>\r\n                            <p className=\"card-text\">{item.description}</p>\r\n                            <p className=\"card-text\"><small className=\"text-muted\">{item.price}</small></p>\r\n                            <a href=\"#\" className=\"btn btn-primary\" onClick={(e)=>this.handleClick(item,e)}> Add to Chart</a>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Barang;\r\n","import React,{ Component } from 'react';\nimport './App.css';\nimport './Popup.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Barang from './component/barang.js';\n\nconst item = [\n  {\n    id: 1,\n    name: 'Keyboard Logitek',\n    price: 60000,\n    description: 'Keyboard untuk sehari-hari',\n    img: '/assets/keyboard1.jpg'\n  },\n  {\n    id: 2,\n    name: 'Keyboard MSI',\n    price: 300000,\n    description: 'Keyboard untuk gaya',\n    img: '/assets/keyboard2.jpg'\n  },\n  {\n    id: 3,\n    name: 'Mouse Jenius',\n    price: 50000,\n    description: 'Mouse untuk gaya',\n    img: '/assets/mouse1.jpg'\n  },\n  {\n    id: 4,\n    name: 'Mouse Jerry',\n    price: 30000,\n    description: 'Mouse untuk sehari-hari',\n    img: '/assets/mouse2.jpg'\n  }\n];\nlocalStorage.setItem('items',JSON.stringify(item));\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      initialItems : JSON.parse(localStorage.getItem('items')),\n      items:[],\n      cart:[],\n      totalCart: 0,\n      cari : '',\n      showPopup: false\n    }\n    this.checkOut = this.checkOut.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onCart = this.onCart.bind(this);\n  }\n\n  componentWillMount(){\n    const items = this.getItems();\n    this.setState({ items:items });\n  }\n\n  getItems(){\n    return this.state.initialItems;\n  }\n\n  onSubmit(event){\n    event.preventDefault();\n    this.setState({cari:this.inputName.value});\n  }\n\n  onChange(event){\n    var updatedList = this.state.initialItems;\n    updatedList = updatedList.filter(function(item){\n      return item.name.toLowerCase().search(\n        event.target.value.toLowerCase()) !== -1;\n    });\n    this.setState({items: updatedList});\n  }\n\n  onCart(cartItem){\n    var i =0;\n    let total = cartItem.map((item)=>{\n      i = i + item.item.price;\n      return i;\n    });\n    Promise.all(total).then((completed)=>{\n      this.setState({ totalCart:i })\n    });\n    this.setState({ cart:cartItem });\n  }\n\n  checkOut(e) {\n    e.preventDefault();\n    const pop = this.state.showPopup;\n    this.setState({ showPopup: !pop });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light justify-content-center App-header\">\n            <a className=\"navbar-brad my-2 my-lg-0 text-left\" href=\"/\">Mini E-commerce</a>\n            <form className=\"form-inline mx-lg-5 my-2 my-lg-0\" onSubmit={this.onSubmit}>\n              <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.onChange} ref={inputName => this.inputName = inputName} />\n              <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n            <button className=\"btn btn-primary\" onClick={this.checkOut}>Cart {this.state.cart.length}</button>\n          </nav>\n          <br />\n          <div className=\"barang\">\n            <Barang item={this.state.items} onCart={this.onCart}/>\n            {this.state.showPopup ? \n                <Popup\n                text='Summary'\n                closePopup={this.checkOut}\n                cart={this.state.cart}\n                totalCart={this.state.totalCart}\n                />\n                : null\n              }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Popup extends Component {\n  render() {\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n          <h1>{this.props.text}</h1>\n          <ul>\n            {\n              this.props.cart.map((item) =>{\n                return(\n                  <li>{item.item.name} - Rp{item.item.price},00</li>\n                );\n              })\n            }\n          </ul>\n          <p>Total harga Rp{this.props.totalCart},00</p>\n        <a href=\"/\" className=\"btn btn-success m-2\" onClick={this.props.closePopup}>Buy</a>\n        <button className=\"btn btn-primary\" onClick={this.props.closePopup}>Add Another Item</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}